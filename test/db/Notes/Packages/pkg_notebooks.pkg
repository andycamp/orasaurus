/*<TOAD_FILE_CHUNK>*/
CREATE OR REPLACE PACKAGE pkg_notebooks
IS

  TYPE notebooks_tab
  IS TABLE OF notebooks%ROWTYPE;

  CURSOR cur_notebooks
  RETURN notebooks%ROWTYPE;

  FUNCTION f_get_all
  RETURN notebooks_tab;

  FUNCTION f_get
    ( the_id IN notebooks.id%TYPE )
  RETURN notebooks%ROWTYPE;

  FUNCTION f_get
    ( the_title IN notebooks.title%TYPE )
  RETURN notebooks%ROWTYPE;

  FUNCTION f_title
    ( the_id IN notebooks.id%TYPE )
  RETURN notebooks.title%TYPE;

  FUNCTION f_human_title
    ( the_id IN notebooks.id%TYPE )
  RETURN notebooks.title%TYPE;

  PROCEDURE p_create
    ( the_title IN VARCHAR2 );

END;

/
/*<TOAD_FILE_CHUNK>*/
CREATE OR REPLACE PACKAGE BODY pkg_notebooks
IS

  CURSOR cur_notebooks
  RETURN notebooks%ROWTYPE
  IS
    SELECT *
    FROM notebooks
    ORDER BY title; 

  FUNCTION f_get_all
  RETURN notebooks_tab
  IS
    return_tab notebooks_tab;
  BEGIN
  
    OPEN cur_notebooks;
    FETCH cur_notebooks BULK COLLECT INTO return_tab;
    CLOSE cur_notebooks;
    
    RETURN return_tab;
  
  END;

  FUNCTION f_get
    ( the_id IN notebooks.id%TYPE )
  RETURN notebooks%ROWTYPE
  IS
    return_rec notebooks%ROWTYPE;
  BEGIN
  
    SELECT *
    INTO return_rec
    FROM notebooks
    WHERE id = the_id;
    
    RETURN return_rec;
  
  END;

  FUNCTION f_get
    ( the_title IN notebooks.title%TYPE )
  RETURN notebooks%ROWTYPE
  IS
    return_rec notebooks%ROWTYPE;
  BEGIN
  
    SELECT *
    INTO return_rec
    FROM notebooks
    WHERE title = the_title;
    
    RETURN return_rec;
  
  END;
  
  FUNCTION f_title
    ( the_id IN notebooks.id%TYPE )
  RETURN notebooks.title%TYPE
  IS
    return_val notebooks.title%TYPE;
  BEGIN
    
    SELECT title
    INTO return_val
    FROM notebooks
    WHERE id = the_id;
  
    RETURN return_val;
  
  END;
  
  FUNCTION f_human_title
    ( the_id IN notebooks.id%TYPE )
  RETURN notebooks.title%TYPE
  IS
  BEGIN
  
    RETURN INITCAP( REPLACE( f_title( the_id  ), '_', ' ' ) );
  
  END;    

  PROCEDURE p_create
    ( the_title IN VARCHAR2 )
  IS
  BEGIN
  
    INSERT INTO notebooks
      ( id
      , title )
    VALUES
      ( notebooks_seq.nextval
      , the_title );  
  
  
  END;  

END;
/
